package ${basePackage}.controller;

import Permission;
import BaseController;
import BaseResp;
import LayPageResp;
import PageResp;
import ${basePackage}.entity.${className};
import ${basePackage}.service.${className}Service;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * \@author ${author}
 * \@create ${date}
 */
\@Controller
\@RequestMapping(value = "\${swear.path.admin}/${tablePrefix}/${uncapClassName}")
public class ${className}Controller extends BaseController {

    \@Autowired
    private ${className}Service ${uncapClassName}Service;

    \@RequestMapping(value = "list.html")
    \@Permission(value = "${tablePrefix}-${uncapClassName}-list")
    public String listHtml(){
        return "${htmlRelativePath}/${uncapClassName}/${uncapClassName}-list";
    }

    \@RequestMapping(value = "add.html")
    public String addHtml(){
        return "${htmlRelativePath}/${uncapClassName}/${uncapClassName}-add";
    }

    \@RequestMapping(value = "edit.html")
    public String editHtml(\@RequestParam("id") String id, Model model){
        ${className} ${uncapClassName} = ${uncapClassName}Service.selectById(id);
        model.addAttribute("${uncapClassName}",${uncapClassName});
        return "${htmlRelativePath}/${uncapClassName}/${uncapClassName}-edit";
    }

    \@RequestMapping(value = "list.ajax")
    \@ResponseBody
    public Object ajaxList(${className} ${uncapClassName}){
        PageResp<${className}> pageResp = ${uncapClassName}Service.findPage(${uncapClassName});
        LayPageResp layPageResp = new LayPageResp(pageResp.getDataList(),pageResp.getTotalRows());
        return layPageResp;
    }

    \@RequestMapping(value = "add.ajax")
    \@ResponseBody
    public BaseResp add(${className} ${uncapClassName}){
        BaseResp baseResp = BaseResp.newSuccess();
        ${uncapClassName}Service.save(${uncapClassName});
        return baseResp;
    }

    \@RequestMapping(value = "edit.ajax")
    \@ResponseBody
    public BaseResp edit(${className} ${uncapClassName}){
        BaseResp baseResp = BaseResp.newSuccess();
        if (null == ${uncapClassName} || StringUtils.isBlank(${uncapClassName}.getId())){
            return baseResp.paramsError();
        }
        int r = ${uncapClassName}Service.updateSelective(${uncapClassName});
        if (r == 1){
            return baseResp;
        }else return baseResp.putError();
    }

    \@RequestMapping(value = "delete")
    \@ResponseBody
    public BaseResp delete(String id){
        BaseResp baseResp = BaseResp.newSuccess();
        int r = ${uncapClassName}Service.delete(id);
        if (r == 1){
            return baseResp;
        }else return baseResp.putError();
    }

    \@RequestMapping(value = "batchDel")
    \@ResponseBody
    public BaseResp batchDel(String[] ids){
        BaseResp baseResp = BaseResp.newSuccess();
        int count = 0;
        for (String id : ids){
            int r = ${uncapClassName}Service.delete(id);
            if (r == 1){
                count ++;
            }
        }
        if (count == ids.length){
            return baseResp;
        }else return baseResp.putError();
    }
}
