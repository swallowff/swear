<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${basePackage}.dao.${className}Dao">

    <sql id="baseColumns">
        a.id AS id,
        @for(field in item.fields){
        a.${StringUtils.uncamelCase(field.fieldName)} AS ${field.fieldName},
        @}
        a.create_time AS createTime,
        a.update_time AS updateTime,
        a.version AS version
    </sql>

    <select id="selectById" resultType="${basePackage}.entity.${className}">
      SELECT
      <include refid="baseColumns"/>
      FROM ${tableName} a
      <where>
          a.delflag = 0
          AND a.id = #{id}
      </where>
    </select>

    <select id="findEntity" resultType="${basePackage}.entity.${className}">
        SELECT
        <include refid="baseColumns"/>
        FROM ${tableName} a
        <where>
            a.delflag = 0
          @for(field in item.fields){
            @if(field.fieldClassName == 'String'){
            <if test="${field.fieldName} != null and ${field.fieldName} != ''">
            @}
            @else{
            <if test="${field.fieldName} != null">
            @}
                AND a.${StringUtils.uncamelCase(field.fieldName)} = #{${field.fieldName}}
            </if>
          @}
        </where>
        LIMIT 1
    </select>

    <select id="findList" resultType="${basePackage}.entity.${className}">
        SELECT
        <include refid="baseColumns"/>
        FROM ${tableName} a
        <where>
            a.delflag = 0
           @for(field in item.fields){
            @if(field.fieldClassName == 'String'){
            <if test="${field.fieldName} != null and ${field.fieldName} != ''">
            @}
            @else{
            <if test="${field.fieldName} != null">
            @}
                AND a.${StringUtils.uncamelCase(field.fieldName)} = #{${field.fieldName}}
            </if>
           @}
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY \${orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO ${tableName}(
          id,
          @for(field in item.fields){
          ${StringUtils.uncamelCase(field.fieldName)},
          @}
          update_time,
          create_time,
          delflag
        ) VALUES (
          #{id},
          @for(field in item.fields){
          #{${field.fieldName}},
          @}
          #{updateTime},
          #{createTime},
          #{delflag}
        )
    </insert>

    <update id="update">
        UPDATE ${tableName} SET
          @for(field in item.fields){
          ${StringUtils.uncamelCase(field.fieldName)} = #{${field.fieldName}},
          @}
          update_time = #{updateTime}
          <where>
              delflag = 0
              AND id = #{id}
          </where>
    </update>

    <update id="updateSelective">
        UPDATE ${tableName}
        <set>
           @for(field in item.fields){
            @if(field.fieldClassName == 'String'){
            <if test="${field.fieldName} != null and ${field.fieldName} != ''">
            @}
            @else{
            <if test="${field.fieldName} != null">
            @}
                ${StringUtils.uncamelCase(field.fieldName)} = #{${field.fieldName}},
            </if>
           @}
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        <where>
            delflag = 0
            AND id = #{id}
        </where>
    </update>

    <update id="delete">
        UPDATE ${tableName} a
        SET a.delflag = 1
        <where>
          a.delflag = 0
          AND a.id = #{id}
        </where>
    </update>

</mapper>
