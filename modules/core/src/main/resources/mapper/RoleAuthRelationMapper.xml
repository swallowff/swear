<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.swallowff.modules.core.system.dao.RoleAuthRelationDao">

    <sql id="baseColumns">
        a.role_id AS roleId,
        a.auth_code AS authCode,
        a.menu_id AS menuId,
        a.create_time AS createTime,
        a.update_time AS updateTime,
        a.version AS version
    </sql>

    <select id="selectById" resultType="RoleAuthRelation">
      SELECT
      <include refid="baseColumns"/>
      FROM sys_role_auth_relation a
      <where>
          a.delflag = 0
          AND a.id = #{id}
      </where>
    </select>

    <select id="findList" resultType="RoleAuthRelation">
        SELECT
        <include refid="baseColumns"/>
        FROM sys_role_auth_relation a
        <where>
            a.delflag = 0
            <if test="roleId != null and roleId != ''">
              AND a.role_id = #{roleId}
            </if>
            <if test="authCode != null and authCode != ''">
                AND a.auth_code = #{authCode}
            </if>
            <if test="menuId != null and menuId != ''">
                AND a.menu_id = #{menuId}
            </if>
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="findPermissionsByRole" resultType="java.lang.String">
        SELECT
        a.auth_code
        FROM sys_role_auth_relation a
        <where>
            a.delflag = 0
            AND a.role_id = #{arg0}
        </where>
    </select>

    <insert id="insert">
        INSERT INTO sys_role_auth_relation(
          id,
          role_id,
          auth_code,
          menu_id,
          create_time,
          update_time,
          version,
          delflag
        ) VALUES (
          #{id},
          #{roleId},
          #{authCode},
          #{menuId},
          #{createTime},
          #{updateTime},
          #{version},
          #{delflag}
        )
    </insert>

    <update id="update">
        UPDATE sys_role_auth_relation SET
          role_id = #{roleId},
          auth_code = #{authCode},
          menu_id = #{menuId},
          update_time = #{updateTime},
          version = #{version}
          <where>
              delflag = 0
              AND id = #{id}
          </where>
    </update>

    <update id="updateSelective">
        UPDATE sys_role_auth_relation
        <set>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId},
            </if>
            <if test="authCode != null and authCode != ''">
                auth_code = #{authCode},
            </if>
            <if test="menuId != null and menuId != ''">
                menu_id = #{menuId},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        <where>
            delflag = 0
            AND id = #{id}
        </where>
    </update>

    <update id="delete">
        UPDATE sys_role_auth_relation a
        SET a.delflag = 1
        <where>
            a.delflag = 0
            AND a.id = #{id}
        </where>
    </update>
    
    <delete id="delByRoleId">
        DELETE FROM sys_role_auth_relation
        <where>
            delflag = 0
            AND role_id = #{arg0}
        </where>
    </delete>

</mapper>
