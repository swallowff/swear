<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.swallowff.modules.core.system.dao.MenuDao">

    <sql id="baseColumns">
        DISTINCT(a.id) AS id,
        a.code AS code,
        a.pid AS pid,
        a.pids AS pids,
        a.name AS name,
        a.icon AS icon,
        a.url AS url,
        a.sort AS sort,
        a.levels AS levels,
        a.is_menu AS isMenu,
        a.is_expandable AS isExpandable,
        a.tips AS tips,
        a.is_open AS isOpen,
        a.create_time AS createTime,
        a.update_time AS updateTime,
        a.version AS version
    </sql>

    <select id="selectById" resultType="Menu">
        SELECT
        <include refid="baseColumns"/>
        FROM sys_menu a
        <where>
            a.delflag = 0
            AND a.id = #{id}
        </where>
    </select>

    <select id="findEntity" resultType="Menu">
        SELECT
        <include refid="baseColumns"/>
        FROM sys_menu a
        <where>
            a.delflag = 0
            <if test="code != null and code != ''">
                AND a.code = #{code}
            </if>
            <if test="parent != null and parent.id != null and parent.id != ''">
                AND a.pid = #{parent.id}
            </if>
            <if test="pids != null and pids != ''">
                AND a.pids LIKE CONCAT('%',#{pids},'%')
            </if>
            <if test="name != null and name != ''">
                AND a.name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="levels != null">
                AND a.levels = #{levels}
            </if>
            <if test="isMenu != null">
                AND a.is_menu = #{isMenu}
            </if>
            <if test="isExpandable != null">
                AND a.is_expandable = #{isExpandable}
            </if>
        </where>
        LIMIT 1
    </select>

    <select id="findList" resultType="Menu">
        SELECT
        <include refid="baseColumns"/>
        FROM sys_menu a
        <where>
            a.delflag = 0
            <if test="code != null and code != ''">
                AND a.code = #{code}
            </if>
            <if test="parent != null and parent.id != null and parent.id != ''">
                AND a.pid = #{parent.id}
            </if>
            <if test="pids != null and pids != ''">
                AND a.pids LIKE CONCAT('%',#{pids},'%')
            </if>
            <if test="name != null and name != ''">
                AND a.name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="levels != null">
                AND a.levels = #{levels}
            </if>
            <if test="isMenu != null">
                AND a.is_menu = #{isMenu}
            </if>
            <if test="isExpandable != null">
                AND a.is_expandable = #{isExpandable}
            </if>
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="findMenuListWithRole" resultType="cn.swallowff.modules.core.system.dto.DtreeNode">
        SELECT
        a.id AS id,
        a.pid AS parentId,
        IF(r.id IS NOT NULL,1,0) AS checkArr,
        a.name AS title
        FROM sys_menu a
        LEFT JOIN sys_role_auth_relation r ON r.role_id = #{roleId} AND r.menu_id = a.id AND r.delflag = 0
        <where>
            a.delflag = 0
            <if test="menu.pids != null and menu.pids != ''">
                AND a.pids LIKE CONCAT('%',#{menu.pids},'%')
            </if>
        </where>
        <choose>
            <when test="menu.orderBy != null and menu.orderBy != ''">
                ORDER BY ${menu.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="findChildren" resultType="Menu">
        SELECT
        <include refid="baseColumns"/>
        FROM sys_menu a
        INNER JOIN sys_user u ON u.delflag = 0 AND u.id = #{userId}
        INNER JOIN sys_user_role_relation ur ON ur.delflag = 0 AND ur.user_id = u.id
        INNER JOIN sys_role r ON r.delflag = 0 AND r.id = ur.role_id
        INNER JOIN sys_role_auth_relation ra ON ra.delflag = 0 AND ra.role_id = r.id AND ra.menu_id = a.id
        <where>
            a.delflag = 0
            AND a.pid = #{id}
            <if test="isMenu != null">
                AND a.is_menu = #{isMenu}
            </if>
        </where>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_time DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO sys_menu(
        id,
        code,
        pid,
        pids,
        name,
        icon,
        url,
        sort,
        levels,
        is_menu,
        is_expandable,
        tips,
        is_open,
        update_time,
        create_time,
        delflag
        ) VALUES (
        #{id},
        #{code},
        #{pid},
        #{pids},
        #{name},
        #{icon},
        #{url},
        #{sort},
        #{levels},
        #{isMenu},
        #{isExpandable},
        #{tips},
        #{isOpen},
        #{updateTime},
        #{createTime},
        #{delflag}
        )
    </insert>

    <update id="update">
        UPDATE sys_menu SET
        code = #{code},
        pid = #{pid},
        pids = #{pids},
        name = #{name},
        icon = #{icon},
        url = #{url},
        sort = #{sort},
        levels = #{levels},
        is_menu = #{isMenu},
        is_expandable = #{isExpandable},
        tips = #{tips},
        is_open = #{isOpen},
        update_time = #{updateTime}
        <where>
            delflag = 0
            AND id = #{id}
        </where>
    </update>

    <update id="updateSelective">
        UPDATE sys_menu
        <set>
            <if test="code != null">
                code = #{code},
            </if>
            <if test="parent != null and parent.id != null and parent.id != ''">
                pid = #{parent.id},
            </if>
            <if test="pids != null and pids != ''">
                pids = #{pids},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="levels != null">
                levels = #{levels},
            </if>
            <if test="isMenu != null">
                is_menu = #{isMenu},
            </if>
            <if test="isExpandable != null">
                is_expandable = #{isExpandable},
            </if>
            <if test="tips != null">
                tips = #{tips},
            </if>
            <if test="isOpen != null">
                is_open = #{isOpen},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        <where>
            delflag = 0
            AND id = #{id}
        </where>
    </update>

    <update id="delete">
        UPDATE sys_menu a
        SET a.delflag = 1
        <where>
            a.delflag = 0
            AND a.id = #{id}
        </where>
    </update>

</mapper>
